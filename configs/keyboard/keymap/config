xkb_keymap {
  xkb_keycodes { include "evdev" };

  xkb_types {
    include "basic"
    include "pc"
    include "numpad"

    type "Ctrl_type" {
      modifiers = Control+Shift;
      map[None] = Level1;
      map[Shift] = Level2;
      map[Control] = Level3;
      level_name[Level1] = "Base";
      level_name[Level2] = "Shift";
      level_name[Level3] = "Ctrl";
    };

    type "Alt_type" {
      modifiers = Shift+Mod5;
      map[None] = Level1;
      map[Shift] = Level2;
      map[Mod5] = Level3;
      level_name[Level1] = "Base";
      level_name[Level2] = "Shift";
      level_name[Level3] = "AltGr";
    };

  };

  xkb_compat {
    include "basic"
    include "ledscroll(group_lock)"
    augment "misc"
    augment "xfree86"

    interpret ISO_First_Group {
      action= LockGroup(group=1);
    };

    interpret ISO_Last_Group {
      action= LockGroup(group=3);
    };

    interpret Hyper_R {
      action= LockGroup(group=2);
    };

    //interpret ISO_Level3_Latch {
    //  action= LockGroup(group=4);
    //};

    interpret ISO_Group_Latch {
      action = setGroup(group=4, clearLocks);
    };
  };

  xkb_symbols {

    include "pc+dvp"
    include "us:2"
    include "ru:3"
    include "keys:4"

    include "inet(evdev)"
    include "terminate(ctrl_alt_bksp)"


    //////////////////////////////////////////////////
    // Layouts Switch

    replace key <CAPS> {
      type = "Ctrl_type",
      [ ISO_First_Group, ISO_Last_Group, Hyper_R ]
    };


    replace key <RALT> {
      symbols[Group1] = [ ISO_Group_Latch ],
      symbols[Group2] = [ ISO_Group_Latch ],
      symbols[Group3] = [ ISO_Group_Latch ],
      symbols[Group4] = [ ISO_Group_Latch ],

      actions[Group1] = [ SetGroup(group=+3) ],
      actions[Group2] = [ SetGroup(group=+2) ],
      actions[Group3] = [ SetGroup(group=+1) ]
    };
    replace key <TAB> {
      symbols[Group1] = [ ISO_Group_Latch ],
      symbols[Group2] = [ ISO_Group_Latch ],
      symbols[Group3] = [ ISO_Group_Latch ],
      symbols[Group4] = [ ISO_Group_Latch ],

      actions[Group1] = [ SetGroup(group=+3) ],
      actions[Group2] = [ SetGroup(group=+2) ],
      actions[Group3] = [ SetGroup(group=+1) ]
    };


    //////////////////////////////////////////////////
    // Ctrl-h => Backspace
    key <AC06> {
      type = "Ctrl_type",
      actions[Group1] = [ NoAction(), NoAction(), RedirectKey(key=<BKSP>,clearmods=Control)],
      actions[Group2] = [ NoAction(), NoAction(), RedirectKey(key=<BKSP>,clearmods=Control)],
      actions[Group3] = [ NoAction(), NoAction(), RedirectKey(key=<BKSP>,clearmods=Control)]
    };

  };

  xkb_geometry  { include "pc(pc105)" };
};
