# vim: set syntax=conf:
# Instance layout (base paths)
method.insert = cfg.basedir, private|const|string, (cat,"/home/vlad/rtorrent/")
method.insert = cfg.watch,   private|const|string, (cat,(cfg.basedir),"watch/")
method.insert = cfg.logs,    private|const|string, (cat,(cfg.basedir),"log/")
method.insert = cfg.logfile, private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")

# Basic operational settings (no need to change these)
session.path.set = (cat, (cfg.basedir), ".session/")
directory.default.set = (cat, (cfg.basedir), "downloads/incomplete")
log.execute = (cat, (cfg.logs), "execute.log")
log.xmlrpc = (cat, (cfg.logs), "xmlrpc.log")
execute.nothrow = bash, -c, (cat, "echo >", (session.path), "rtorrent.pid", " ", (system.pid))



# Listening port for incoming peer traffic (fixed; you can also randomize it)
network.port_range.set = 62920-62920
network.port_random.set = no

# Tracker-less torrent and UDP tracker support
# (conservative settings for 'private' trackers, change for 'public')
dht.mode.set = auto
dht.port.set = 62921
protocol.pex.set = yes
trackers.use_udp.set = yes

# adding new dht server
#schedule2 = dht_node_0, 5, 0, "dht.add_node=router.bittorrent.com:6881"
#schedule2 = dht_node_1, 5, 0, "dht.add_node=router.utorrent.com:6881"
#schedule2 = dht_node_2, 5, 0, "dht.add_node=dht.transmissionbt.com:6881"
#schedule2 = dht_node_3, 5, 0, "dht.add_node=router.bitcomet.com:6881"
#schedule2 = dht_node_4, 5, 0, "dht.add_node=dht.aelitis.com:6881"


# Global upload and download rate in KiB, `0` for unlimited (`download_rate`, `upload_rate`)
throttle.global_down.max_rate.set_kb = 10000
throttle.global_up.max_rate.set_kb   = 2500

# Maximum number of simultaneous downloads and uploads slots (global slots!) (max_downloads_global, max_uploads_global)
throttle.max_downloads.global.set = 300
throttle.max_uploads.global.set   = 300

# Maximum and minimum number of peers to connect to per torrent while downloading. Default: `100` and `200` respectively. (Applies to Special group. Slowup group values will be overriden by per torrent settings in Favouring section of main config file). (min_peers, max_peers)
throttle.min_peers.normal.set = 99
throttle.max_peers.normal.set = 100

# Same as above but for seeding completed torrents (-1 = same as downloading) Default: `-1` for both. (seeds per torrent) (Applies to Special group. Slowup group values will be overriden by per torrent settings in Favouring section of main config file). (min_peers_seed, max_peers_seed)
throttle.min_peers.seed.set = -1
throttle.max_peers.seed.set = -1

# Maximum number of simultaneous downloads and uploads slots per torrent (`max_uploads`) Default: `50` (Applies to Special group. Slowup group values will be overriden by per torrent settings in Favouring section of main config file). (max_uploads)
throttle.max_downloads.set = 50
throttle.max_uploads.set = 50

#protocol.encryption.set = allow_incoming,try_outgoing,enable_retry
#protocol.encryption.set = allow_incoming,prefer_plaintext,enable_retry

# Limits for file handle resources, this is optimized for
# an `ulimit` of 1024 (a common default). You MUST leave
# a ceiling of handles reserved for rTorrent's internal needs!
network.http.max_open.set = 200
network.max_open_files.set = 1000
network.max_open_sockets.set = 300
#network.http.max_open.set = 50
#network.max_open_files.set = 600
#network.max_open_sockets.set = 300

# Memory resource usage (increase if you have a large number of items loaded,
# and/or the available resources to spend)
pieces.memory.max.set = 1800M
network.xmlrpc.size_limit.set = 4M

# Other operational settings (check & adapt)
encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)
#network.http.dns_cache_timeout.set = 25
network.http.dns_cache_timeout.set = 12
##network.http.capath.set = "/etc/ssl/certs"
##network.http.ssl_verify_peer.set = 0
##network.http.ssl_verify_host.set = 0
##pieces.hash.on_completion.set = no
##keys.layout.set = qwerty

# Enables logging. Levels=[critical|error|warn|notice|info|debug]  Groups=[connection_*|dht_*|peer_*|rpc_*|storage_*|thread_*|tracker_*|torrent_*]
#log.open_gz_file_pid = "rtorrent.log", (cat,"/tmp/rtorrent.log")
#log.add_output = "info", "rtorrent.log"
#log.add_output = "tracker_debug", "rtorrent.log"


schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))

schedule2 = watch_directory_1, 15, 5, ((load.normal, "/home/vlad/rtorrent/watch/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/", "d.custom1.set=/home/vlad/rtorrent/watch/", "d.custom2.set=1"))
schedule2 = watch_directory_2, 15, 5, ((load.start, "/home/vlad/rtorrent/watch/music/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/music/", "d.custom1.set=/home/vlad/rtorrent/watch/music/", "d.custom2.set=1"))
schedule2 = watch_directory_3, 15, 5, ((load.normal, "/home/vlad/rtorrent/watch/videos/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/videos/", "d.custom1.set=/home/vlad/rtorrent/watch/videos/", "d.custom2.set=1"))
schedule2 = watch_directory_4, 15, 5, ((load.normal, "/home/vlad/rtorrent/watch/games/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/games/", "d.custom1.set=/home/vlad/rtorrent/watch/games/", "d.custom2.set=1"))

schedule2 = watch_directory_5, 17, 5, ((load.normal, "/home/vlad/rtorrent/watch/mon/G/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/mon/G/", "d.custom1.set=/home/vlad/rtorrent/watch/mon/G/", "d.custom2.set="))
schedule2 = watch_directory_6, 17, 5, ((load.normal, "/home/vlad/rtorrent/watch/mon/H/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/mon/H/", "d.custom1.set=/home/vlad/rtorrent/watch/mon/H/", "d.custom2.set="))
schedule2 = watch_directory_7, 17, 5, ((load.normal, "/home/vlad/rtorrent/watch/mon/L/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/mon/L/", "d.custom1.set=/home/vlad/rtorrent/watch/mon/L/", "d.custom2.set="))
schedule2 = watch_directory_8, 17, 5, ((load.normal, "/home/vlad/rtorrent/watch/mon/M/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/mon/M/", "d.custom1.set=/home/vlad/rtorrent/watch/mon/M/", "d.custom2.set="))
schedule2 = watch_directory_9, 17, 5, ((load.normal, "/home/vlad/rtorrent/watch/mon/P/*.torrent", "d.custom3.set=/home/vlad/rtorrent/downloads/mon/P/", "d.custom1.set=/home/vlad/rtorrent/watch/mon/P/", "d.custom2.set="))

#needed for flollowing blocks
method.insert = d.get_data_full_path, simple, "branch=((d.is_multi_file)),((cat,(d.directory))),((cat,(d.directory),/,(d.name)))"

#incomplete file in "incomplete dir"
method.insert = d.move_to_complete, simple, "d.directory.set=$argument.1=; execute=mkdir,-p,$argument.1=; execute=mv,-u,$argument.0=,$argument.1=; d.save_full_session="
method.set_key = event.download.finished,move_complete,"d.move_to_complete=$d.get_data_full_path=,$d.custom3="

#delete files if remove incomplete tied
#method.set_key = event.download.finished,d.custom2.set=
#method.set_key = event.download.erased,rm_files,"branch=d.custom2=,\"execute={rm,-rf,--,$d.get_data_full_path=}\""

#rename tied file by state
method.insert = d.renamed_suffix,   simple, "if= $d.complete=, +++, ---"
method.insert = d.renamed_file,     simple, "cat= $d.custom1=, $d.name=, ., $d.renamed_suffix=, .torrent"
method.insert = d.rename_file,      simple, "execute = mv, --, $d.tied_to_file=, $d.renamed_file=; d.tied_to_file.set = $d.renamed_file="
method.insert = d.safe_rename_file, simple, "branch = ((equal, d.tied_to_file=, d.renamed_file=)), , d.rename_file="
method.set_key = event.download.inserted_new,   rename_loaded,  d.safe_rename_file=
method.set_key = event.download.resumed,        rename_resumed, d.safe_rename_file=
method.set_key = event.download.finished,       rename_finished,d.safe_rename_file=

# Watch a directory for torrents, and remove those that have been deleted.
schedule = watch_untied,      5, 5, ((remove_untied))

# Notify when download finished
method.set_key = event.download.finished, notify_me, "execute = /usr/bin/notify-send, $d.name="

#
# PyroScope SETTINGS
#

# Set "pyro.extended" to 1 to activate rTorrent-PS features!
# LEAVE THIS AT 0 IF YOU RUN A VANILLA rTorrent!
method.insert = pyro.extended, value|const, 1

# Set "pyro.bin_dir" to the "bin" directory where you installed the pyrocore tools!
# Make sure you end it with a "/"; if this is left empty, then the shell's path is searched.
method.insert = pyro.bin_dir, string|const,

# Collapse view
schedule = bind_collapse,0,0,"ui.bind_key=download_list,c,view.collapsed.toggle="
view.collapsed.toggle=main
view.collapsed.toggle=name
view.collapsed.toggle=active
view.collapsed.toggle=started
view.collapsed.toggle=stopped
view.collapsed.toggle=complete
view.collapsed.toggle=incomplete
view.collapsed.toggle=hashing
view.collapsed.toggle=seeding
view.collapsed.toggle=leeching

# Style view
ui.style.progress.set=2

# Show traffic of the last hour
network.history.depth.set = 112
schedule = network_history_sampling,1,32, network.history.sample=
method.insert = network.history.auto_scale.toggle, simple|private, "branch=network.history.auto_scale=,\"network.history.auto_scale.set=0\",\"network.history.auto_scale.set=1\""
method.insert = network.history.auto_scale.ui_toggle, simple|private, "network.history.auto_scale.toggle= ;network.history.refresh="
branch=pyro.extended=,"schedule = bind_auto_scale,0,0,\"ui.bind_key=download_list,=,network.history.auto_scale.ui_toggle=\""

# Colors
ui.color.alarm.set=""
ui.color.focus.set="reverse"
ui.color.footer.set="white on black"
ui.color.incomplete.set="yellow"
ui.color.info.set="white"
ui.color.label.set="blue"
ui.color.leeching.set="bold bright yellow"
ui.color.queued.set="magenta"
ui.color.seeding.set="bold bright green"
ui.color.title.set="white on black"

# 256 color tweak
ui.color.complete.set=41
ui.color.stopped.set=33
ui.color.even.set="on 234"
ui.color.odd.set="on 232"
ui.color.progress0.set=196
ui.color.progress20.set=202
ui.color.progress40.set=213
ui.color.progress60.set=214
ui.color.progress80.set=226
ui.color.progress100.set=41
ui.color.progress120.set="bold bright green"

method.insert = quit, simple, "execute.throw=kill,-INT,(system.pid)"
schedule = vi_quit, 2, 0, "ui.bind_key = download_list, q, quit="
method.insert = force_quit, simple, "execute.throw=kill,-9,(system.pid)"
schedule = vi_force_quit, 2, 0, "ui.bind_key = download_list, ^c, force_quit="

#
schedule2 = bind_home,3,0,"ui.bind_key=download_list,0406,ui.focus.home="
schedule2 = bind_end, 3,0,"ui.bind_key=download_list,0550,ui.focus.end="
schedule2 = bind_pgup,3,0,"ui.bind_key=download_list,0523,ui.focus.pgup="
schedule2 = bind_pgdn,3,0,"ui.bind_key=download_list,0522,ui.focus.pgdn="
